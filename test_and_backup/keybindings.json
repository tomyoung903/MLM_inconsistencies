// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "right",
        "command": "notebook.cell.expandCellInput",
        "when": "notebookCellInputIsCollapsed && notebookCellListFocused"
    },
    {
        "key": "left",
        "command": "notebook.cell.collapseCellInput",
        "when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
    },
    {
        "key": "ctrl+k ctrl+c",
        "command": "-notebook.cell.expandCellInput",
        "when": "notebookCellInputIsCollapsed && notebookCellListFocused"
    },
    {
        "key": "ctrl+k ctrl+c",
        "command": "-notebook.cell.collapseCellInput",
        "when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
    },
    {
        "key": "alt+q",
        "command": "notebook.revealRunningCell"
    },
    {
        "key": "ctrl+up",         // whatever keybinding you want
        "command": "cursorMove",
        "args": {
            "to": "up",
            "by": "line",
            "value": 8         // change this if you want
        },
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+down",        // whatever keybinding you want
        "command": "cursorMove",
        "args": {
            "to": "down",
            "by": "line",
            "value": 8         // change
        },
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+[",
        "command": "editor.fold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+]",
        "command": "editor.unfold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {       
        "key": "t",
        "command": "extension.multiCommand.execute",
        "args": { 
            "sequence": // change run cell to false 
            [
                "notebook.cell.edit",
                "cursorMove1000LinesUp",
                "deleteRight16Chars",
                "InsertTextRunCellTrue",
                "notebook.cell.quitEdit",
            ]          
        },
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused" 
    },
    {
        "key": "ctrl+'",
        "command": "extension.multiCommand.execute",
        "args": { 
            "sequence": // change the variable in the current line to False
            [
                "cursorMove100charRight",
                "deleteRight4Chars",
                "InsertTextFalse",
            ]          
        },
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "f",
        "command": "extension.multiCommand.execute",
        "args": { 
            "sequence": // change run cell to false
            [
                "notebook.cell.edit",
                "cursorMove1000LinesUp",
                "deleteRight16Chars",
                "InsertTextRunCellFalse",
                "notebook.cell.quitEdit",
            ]          
        },
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused" 
    },
    {
        "key": "ctrl+` ctrl+down",
        "command": "extension.multiCommand.execute",
        "args": { 
            "sequence": 
            [   
                "workbench.action.decreaseViewSize",
            ]
        }
    },
    {
        "key": "ctrl+` ctrl+up",
        "command": "extension.multiCommand.execute",
        "args": { 
            "sequence": 
            [   
                "workbench.action.increaseViewSize",
            ]
        }
    },
    {
        "key": "left",
        "command": "notebook.cell.collapseCellInput",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "ctrl+[",
        "command": "-notebook.fold",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "right",
        "command": "notebook.cell.expandCellInput",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "ctrl+shift+]",
        "command": "-notebook.unfold",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
    },
    { 
        "key": "q",            
        "command": "notebook.cell.clearOutputs",
        "when": "notebookCellEditable && notebookCellHasOutputs && notebookEditable && notebookEditorFocused && !inputFocus" 
    },
    {
        
        "key": "r",            
        "command": "notebook.cell.executeCellsAbove",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "ctrl+shift+c",
        "command": "-workbench.action.terminal.openNativeConsole",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+shift+c",
        "command": "-workbench.action.terminal.copySelection",
        "when": "terminalTextSelectedInFocused || terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected || terminalFocus && terminalTextSelected && terminalTextSelectedInFocused || terminalHasBeenCreated && terminalTextSelected && terminalTextSelectedInFocused || terminalProcessSupported && terminalTextSelected && terminalTextSelectedInFocused"
    },
    {
        "key": "ctrl+shift+c",
        "command": "terminal.focus"
    },
    {
        "key": "u",
        "command": "jupyter.runAndDebugCell",
        "when": "isWorkspaceTrusted && jupyter.ispythonnotebook && !notebookKernel && notebookCellType == 'code' || isWorkspaceTrusted && jupyter.ispythonnotebook && notebookCellType == 'code' && notebookKernel =~ /^ms-toolsai.jupyter\\// && resource not in 'jupyter.notebookeditor.debugDocuments'&& !inputFocus"
    },
    {
        "key": "ctrl+shift+alt+enter",
        "command": "-jupyter.runAndDebugCell",
        "when": "isWorkspaceTrusted && jupyter.ispythonnotebook && !notebookKernel && notebookCellType == 'code' || isWorkspaceTrusted && jupyter.ispythonnotebook && notebookCellType == 'code' && notebookKernel =~ /^ms-toolsai.jupyter\\// && resource not in 'jupyter.notebookeditor.debugDocuments'"
    },
    {
        "key": "ctrl+shift+b",
        "command": "-workbench.action.tasks.build",
        "when": "taskCommandsRegistered"
    },
    {
        "key": "ctrl+shift+b",
        "command": "outline.focus"
    },
    {
        "key": "ctrl+alt+r",
        "command": "jupyter.restartkernel"
    },
    {
        "key": "ctrl+alt+t",
        "command": "notebook.execute"
    },
]